/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package icms;

import javax.swing.table.DefaultTableModel;
import java.io.*;
import javax.swing.JFrame;

/**
 *
 * @author mani
 */
public class ViewPairs extends javax.swing.JFrame {

    CommonParameters cp = new CommonParameters ();
    
    VisualizeCode vc1 = new VisualizeCode ();
    VisualizeCode vc2 = new VisualizeCode ();    
    
    
    
    String cochangeString = "id1 = 1085 : id2 = 1763 : type1 = cloned : type2 = cloned : sameclass = 0 : cochangecommits =   3796 ";
    int currentIndex = -1;

    /**
     * Creates new form ViewPairs
     */
    public ViewPairs() {
        initComponents();
    }

    public String convertString (String str)
    {
        String result = "";
        
        int id1 = -1;
        int id2 = -1;
        String type1 = "";
        String type2 = "";
        
        if (str.contains ("gcid1"))
        {
            id1 = Integer.parseInt(cp.getAttributeValueFromString(str, "gcid1"));
            id2 = Integer.parseInt(cp.getAttributeValueFromString(str, "gcid2"));
            
            type1 = "cloned";
            type2 = "cloned";            
        }
        else
        {
            id1 = Integer.parseInt(cp.getAttributeValueFromString(str, "gcid"));
            id2 = Integer.parseInt(cp.getAttributeValueFromString(str, "gmid"));
            
            type1 = "cloned";
            type2 = "noncloned";            
        }
        
        String cochangecommits = cp.getAttributeValueFromString(str, "cochangecommits");
        
        result = "id1 = "+id1+" : id2 = "+id2+" : type1 = "+type1+" : type2 = "+type2+" : sameclass = 0 : cochangecommits =  "+cochangecommits;
        
        return result;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Previous Commit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Next Commit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setText("2");

        jButton3.setText("Detect");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DCP");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("CNP");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(65, 65, 65)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        //int supportThreshold = 2;
        actionsOnWindowOpen (2, 1, 1);
        
    }//GEN-LAST:event_formWindowOpened

    
    public void actionsOnWindowOpen (int supportThreshold, float confidenceThreshold, int dcp_cnp)
    {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        try
        {
            //BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream (cp.subject_system + "/fragmentpairs_new_cloned_noncloned.txt")));
            BufferedReader br;
            if (dcp_cnp == 1)
            {
                br = new BufferedReader (new InputStreamReader (new FileInputStream (cp.subject_system + "/results_crossboundary/pairs_differentclass_type123.txt")));
            }
            else
            {
                br = new BufferedReader (new InputStreamReader (new FileInputStream (cp.subject_system + "/results_crossboundary/pairs_clonenonclone_type123.txt")));
            }
            //BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream (cp.subject_system + "/results_crossboundary/pairs_differentclass_type123.txt")));
            String str = "";
            while ((str = br.readLine())!=null)
            {
                if (str.trim().length() == 0){continue;}
                
                float confidence = Float.parseFloat (cp.getAttributeValueFromString(str, "confidence"));
                int support =  Integer.parseInt (cp.getAttributeValueFromString(str, "support"));
                
                if (support < supportThreshold) {continue;}
                if (confidence < confidenceThreshold) {continue;}
                
                Object [] row = new Object[2];
                row[0] = "";
                row[1] = str;
                model.addRow(row);
            }
        }
        catch (Exception e)
        {
            
        }        
    }
    
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        int row=0;
        String pair = "";

        row = jTable1.getSelectedRow();
        if (row > -1)
        {
            pair = (String)jTable1.getValueAt(row, 1);
            
            cochangeString = convertString(pair);              
            currentIndex = 0;
            showChanges ();
        }
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        currentIndex--;
        showChanges ();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        currentIndex++;
        showChanges ();        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        int supportThreshold = Integer.parseInt (jTextField1.getText ().trim());        
        actionsOnWindowOpen (supportThreshold, 1, 1);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        int supportThreshold = Integer.parseInt (jTextField1.getText ().trim());        
        actionsOnWindowOpen (supportThreshold, 1, 1);        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int supportThreshold = Integer.parseInt (jTextField1.getText ().trim());        
        actionsOnWindowOpen (supportThreshold, 1, 2);         
    }//GEN-LAST:event_jButton5ActionPerformed

    
    public void showChanges ()
    {                        
        int id1 = Integer.parseInt(cochangeString.split("[:]")[0].split("[=]")[1].trim());
        int id2 = Integer.parseInt(cochangeString.split("[:]")[1].split("[=]")[1].trim());
        String type1 = cochangeString.split("[:]")[2].split("[=]")[1].trim();
        String type2 = cochangeString.split("[:]")[3].split("[=]")[1].trim();
        int sameClass = Integer.parseInt(cochangeString.split("[:]")[4].split("[=]")[1].trim());
        String commits = cochangeString.split("[:]")[5].split("[=]")[1].trim();
        
        
        int length = commits.split("[ ]+").length;
        
        if (currentIndex < 0)
        {
            currentIndex = 0;
            return;
        }
        
        if (currentIndex < length)
        {
            vc1.cloneType = 123;
            vc2.cloneType = 123;
            
            vc1.setVisible(true);
            vc2.setVisible(true);
                        
            vc1.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            vc2.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            
            int commit = Integer.parseInt(commits.split("[ ]+")[currentIndex]);
            vc1.codeid = id1;            
            vc1.codetype = type1;
            if (type1.equals ("noncloned"))
            {
                vc1.codetype = "method";
            }
            vc1.commitoperation = commit;
            vc1.showChangesExternalUse ();
            
            
            
            
            vc2.codeid = id2;
            vc2.codetype = type2;
            if (type2.equals ("noncloned"))
            {
                vc2.codetype = "method";
            }            
            vc2.commitoperation = commit;
            vc2.showChangesExternalUse ();
        }
        else
        {
            currentIndex--;
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPairs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPairs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPairs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPairs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPairs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
