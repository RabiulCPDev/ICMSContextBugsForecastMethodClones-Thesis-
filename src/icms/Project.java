/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package icms;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import javax.swing.JFrame;

/**
 *
 * @author mani
 */
public class Project extends javax.swing.JFrame {

    CommonParameters cp = new CommonParameters ();
    AttributeNames an = new AttributeNames ();
    
    int [] changedClones = new int[1000];
    int [] changedClasses = new int [1000];
    String [] clonedMethodTypes = new String [1000];
    int [] containerMethods = new int[1000];
    int [] cloneChangeCounts = new int [1000];
    int ccCount = 0;
    
    
    //shared variables.
    int [] changedNonclones = new int[1000];
    String [] changedNoncloneTypes = new String [1000];
    int ncCount = 0;
    
    
    
    
    /**
     * Creates new form Project
     */
    public Project() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Co-change Analysis and Prediction for Clones");

        jButton1.setText("Co-change Analysis and Prediction for Clones");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("jLabel2");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setName("status"); // NOI18N

        jButton2.setText("Analysis of Co-change Tendency");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Visualize Diff");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Update Changes");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("File Compare");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Analyze Origin for Clones");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Co-change History");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Change History");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Does Clone Fragment Preserve Its Similarity?");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Does a Clone Fragment Preserve Its Similarity? Fine Grained Analysis");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jLabel2.getAccessibleContext().setAccessibleName("status");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            //CochangeAnalysisForClones cafc = new CochangeAnalysisForClones ();
            //cafc.getClonedAndNonclonedMethodPairsNew ();
            
            CochangeDetectionAndPrediction a = new CochangeDetectionAndPrediction ();
            a.detectCochange(); 
            a.fpairs.sortPairs ();
            a.fpairs.writePairs();
            
            //getting statistics regarding prediction.
            a.predictCochange();
            
        }
        catch (Exception e)
        {
            System.out.println ("error in method getClonedAndNonclonedMethodPairs. "+e);
        }                  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        String subjectSystem = cp.subject_system;
        int revisions = cp.revisionCount;
        String language = cp.language_extension;
        
        String systemDetails = "System Name = "+subjectSystem + ",    " + "Revision Count = "+revisions + ",    " + "Programming Language = "+language;
        jLabel2.setText(systemDetails);        
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            CochangeDetectionAndPrediction a = new CochangeDetectionAndPrediction ();
            a.detectCochange();
                        
            //getting statistics regarding association rules.
            a.fpairs.cf  = a.cfragments;
            a.fpairs.updateSupportAndConfidence();
            a.fpairs.getStatisticsClonedNoncloned();
            a.fpairs.getStatisticsClonedOthercloned();
            a.fpairs.getStatisticsClonedSamecloned();
            a.fpairs.getClonePairCount ();
            
            a.fpairs.getSameMethodStatistics();
            
            a.fpairs.getStatistics();
        }
        catch (Exception e)
        {
            System.out.println ("error = "+e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        UpdateChanges uc = new UpdateChanges ();
        uc.updateChanges();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        VisualizeDiff vd = new VisualizeDiff ();
        vd.setVisible(true);
        vd.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        ChangeAnalysis ca = new ChangeAnalysis ();        
        ca.compareFiles("File1.txt", "File2.txt");
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        OriginAnalysisForClones oa = new OriginAnalysisForClones ();
        oa.analyzeOrigin(123);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        ViewPairs vp = new ViewPairs();
        vp.setVisible(true);
        vp.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        
        
        /*VisualizeDiff vd = new VisualizeDiff ();
        vd.setVisible(true);
        vd.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);*/
        
        /*
        VisualizeCode vc1 = new VisualizeCode ();
        vc1.setVisible(true);
        vc1.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        vc1.showChangesExternalUse();
        
        VisualizeCode vc2 = new VisualizeCode ();
        vc2.setVisible(true);
        vc2.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);                                
        */
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        VisualizeCode vc = new VisualizeCode ();
        vc.setVisible(true);
        vc.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        CommonParameters cp = new CommonParameters ();
        int notclone=0, sameclone=0, differentclone=0;
        
        try
        {
            BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream(cp.subject_system +"/fragmentpairs_new_cloned_noncloned.txt")));
            String str = "";
            
            while ((str = br.readLine())!= null)
            {
                if (str.trim().length() == 0) {continue;}
                int cloneid = Integer.parseInt(str.split("[:]")[0].trim().split("[=]")[1].trim());
                int noncloneid = Integer.parseInt(str.split("[:]")[1].trim().split("[=]")[1].trim());
                String commits = str.split("[:]")[5].trim().split("[=]")[1].trim();
                int l = commits.split("[ ]+").length;
                for (int i=0;i<l;i++)
                {
                    int r = Integer.parseInt(commits.split("[ ]+")[i].trim());
                    int s = checkSituation (cloneid, r);
                    if (s == 0){ notclone++; }
                    if (s == 1) {sameclone++;}
                    if (s == 2) {differentclone++;}
                    
                    System.out.println ("not = "+notclone+", same = "+sameclone+", different = "+differentclone + " (c - nc)");
                }                
            }            
            br.close();
            
            br = new BufferedReader (new InputStreamReader (new FileInputStream(cp.subject_system +"/fragmentpairs_new_different_class.txt")));
            str = "";
            
            while ((str = br.readLine())!= null)
            {
                if (str.trim().length() == 0) {continue;}
                int cloneid1 = Integer.parseInt(str.split("[:]")[0].trim().split("[=]")[1].trim());
                int cloneid2 = Integer.parseInt(str.split("[:]")[1].trim().split("[=]")[1].trim());
                String commits = str.split("[:]")[5].trim().split("[=]")[1].trim();
                int l = commits.split("[ ]+").length;
                for (int i=0;i<l;i++)
                {
                    int s = checkSituation (cloneid1, Integer.parseInt(commits.split("[ ]+")[i].trim()));
                    if (s == 0){ notclone++; }
                    if (s == 1) {sameclone++;}
                    if (s == 2) {differentclone++;}
                                        
                    s = checkSituation (cloneid2, Integer.parseInt(commits.split("[ ]+")[i].trim()));
                    if (s == 0){ notclone++; }
                    if (s == 1) {sameclone++;}
                    if (s == 2) {differentclone++;}                    
                    
                    System.out.println ("not = "+notclone+", same = "+sameclone+", different = "+differentclone + " (c - c)");
                }                
            }            
            br.close();  
            
            System.out.println ("percentage of cases.");
            System.out.println ("\tnot clone case = "+notclone + ", percentage = "+(float)notclone*100/(notclone+sameclone+differentclone));
            System.out.println ("\tsame class case = "+sameclone + ", percentage = "+(float)sameclone*100/(notclone+sameclone+differentclone));
            System.out.println ("\tdifferent class case" + differentclone+ ", percentage = "+(float)differentclone*100/(notclone+sameclone+differentclone));            
            
        }
        catch (Exception e)
        {
            System.out.println ("error in method = jButton9ActionPerformed. "+e);
        }
        
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        CommonParameters cp = new CommonParameters ();
        int notclone=0, sameclone=0, differentclone=0;
        
        try
        {
            BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream(cp.subject_system +"/fragmentpairs_new_cloned_noncloned.txt")));
            String str = "";
            
            while ((str = br.readLine())!= null)
            {
                if (str.trim().length() == 0) {continue;}
                int cloneid = Integer.parseInt(str.split("[:]")[0].trim().split("[=]")[1].trim());
                int noncloneid = Integer.parseInt(str.split("[:]")[1].trim().split("[=]")[1].trim());
                String commits = str.split("[:]")[5].trim().split("[=]")[1].trim();
                int l = commits.split("[ ]+").length;
                for (int i=0;i<l;i++)
                {
                    int r = Integer.parseInt(commits.split("[ ]+")[i].trim());
                    int s = checkSituation (cloneid, r);
                    if (s == 0){ notclone++; }
                    if (s == 1) {sameclone++;}
                    if (s == 2) {differentclone++;}
                    
                    System.out.println ("not = "+notclone+", same = "+sameclone+", different = "+differentclone + " (c - nc)");
                }   
                int lcommit = Integer.parseInt(commits.split("[ ]+")[l-1].trim());
                int d = checkDisappearance(cloneid, lcommit);
                if (d == 1) {notclone++;}                
                System.out.println ("not = "+notclone+", same = "+sameclone+", different = "+differentclone + " (c - nc)");
            }            
            br.close();
            
            br = new BufferedReader (new InputStreamReader (new FileInputStream(cp.subject_system +"/fragmentpairs_new_different_class.txt")));
            str = "";
            
            while ((str = br.readLine())!= null)
            {
                if (str.trim().length() == 0) {continue;}
                int cloneid1 = Integer.parseInt(str.split("[:]")[0].trim().split("[=]")[1].trim());
                int cloneid2 = Integer.parseInt(str.split("[:]")[1].trim().split("[=]")[1].trim());
                String commits = str.split("[:]")[5].trim().split("[=]")[1].trim();
                int l = commits.split("[ ]+").length;
                for (int i=0;i<l;i++)
                {
                    int s = checkSituation (cloneid1, Integer.parseInt(commits.split("[ ]+")[i].trim()));
                    if (s == 0){ notclone++; }
                    if (s == 1) {sameclone++;}
                    if (s == 2) {differentclone++;}
                                        
                    s = checkSituation (cloneid2, Integer.parseInt(commits.split("[ ]+")[i].trim()));
                    if (s == 0){ notclone++; }
                    if (s == 1) {sameclone++;}
                    if (s == 2) {differentclone++;}                    
                    
                    System.out.println ("not = "+notclone+", same = "+sameclone+", different = "+differentclone + " (c - c)");
                }
                
                int lcommit = Integer.parseInt(commits.split("[ ]+")[l-1].trim());
                int d = checkDisappearance(cloneid1, lcommit);
                if (d == 1) {notclone++;}
                System.out.println ("not = "+notclone+", same = "+sameclone+", different = "+differentclone + " (c - c)");
            }            
            br.close();  
            
            System.out.println ("percentage of cases.");
            System.out.println ("\tnot clone case = "+notclone + ", percentage = "+(float)notclone*100/(notclone+sameclone+differentclone));
            System.out.println ("\tsame class case = "+sameclone + ", percentage = "+(float)sameclone*100/(notclone+sameclone+differentclone));
            System.out.println ("\tdifferent class case" + differentclone+ ", percentage = "+(float)differentclone*100/(notclone+sameclone+differentclone));            
            
        }
        catch (Exception e)
        {
            System.out.println ("error in method = jButton9ActionPerformed. "+e);
        }        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    public int checkDisappearance (int cloneid, int revision) throws Exception
    {
        for (int i =revision+1;i<cp.revisionCount;i++)
        {
            int classid = cp.getCloneClass(cloneid,i, 123);
            if (classid == -1)
            {
                int checkrevision = i-1 ;
                ccCount = 0;
                ncCount = 0;
                
                getChangedClones(checkrevision);
                getChangedNonclones (checkrevision);
                
                if (ccCount > 1 || ncCount > 0)
                {
                    return 1;
                }
            }
        }
        
        return 0;
    }
    
    
    public void getChangedClones (int commit)  throws Exception          
    {
        //determining the clones that received some changes.
        BufferedReader br1 = new BufferedReader (new InputStreamReader (new FileInputStream(cp.subject_system+"/clonedmethods/type123_clonedmethods_version_"+commit+"_change.txt")));
        String str = "";
        while ((str = br1.readLine())!= null)
        {
            if (str.trim().length() == 0){continue;}
            
            String sgcid = cp.getAttributeValueFromString(str, an.globalCloneID);
            if (sgcid.trim().length() == 0) {continue;}
            
            int gcid = Integer.parseInt(cp.getAttributeValueFromString(str, an.globalCloneID));
            int changeCount = Integer.parseInt(cp.getAttributeValueFromString(str, an.actualCloneChangeCount));
                        
            if (changeCount > 0)
            {                
                int clsid = Integer.parseInt(cp.getAttributeValueFromString(str, an.cloneClassID));
                changedClones[ccCount] = gcid;
                changedClasses[ccCount] = clsid;
                cloneChangeCounts[ccCount] = changeCount;

                int msline = Integer.parseInt(cp.getAttributeValueFromString(str, an.startingLine));
                int meline = Integer.parseInt(cp.getAttributeValueFromString(str, an.endingLine));
                int csline = Integer.parseInt(cp.getAttributeValueFromString(str, an.cloneStartingLine));
                int celine = Integer.parseInt(cp.getAttributeValueFromString(str, an.cloneEndingLine));

                if (meline-msline - celine + csline < 2)
                {  
                    clonedMethodTypes[ccCount] = "fully-cloned";
                }
                else
                {
                    clonedMethodTypes[ccCount] = "partially-cloned";
                }                                                            
                containerMethods[ccCount] = Integer.parseInt(cp.getAttributeValueFromString(str, an.globalMethodID));

                ccCount++;
            }                                
        }        
    }
    
    public void getChangedNonclones (int commit) throws Exception
    {
        BufferedReader br2 = new BufferedReader (new InputStreamReader (new FileInputStream(cp.subject_system+"/methods/methods_version_"+commit+"_change.txt")));
        String str = "";
        while ((str = br2.readLine())!= null)
        {
            if (str.trim().length() == 0){continue;}
            
            String sgmid = cp.getAttributeValueFromString(str, an.globalMethodID);
            if (sgmid.trim().length() == 0) {continue;}            
            
            int gmid = Integer.parseInt(cp.getAttributeValueFromString(str, an.globalMethodID));
            int changeCount = Integer.parseInt(cp.getAttributeValueFromString(str, an.actualMethodChangeCount));
            
            if (changeCount > 0)
            {
                int ccInClones = 0;
                
                for (int i =0;i<ccCount;i++)
                {
                    if (containerMethods[i] == gmid)
                    {
                        ccInClones+= cloneChangeCounts[i];
                    }
                }

                if (changeCount > ccInClones)
                {
                    changedNonclones[ncCount] = gmid;
                    ncCount++;
                }                
            }                
        }                                
    }
    
    
    
    public int checkSituation (int cloneid, int revision)
    {
        //find other clones of the same class in this revision.
        int classid = cp.getCloneClass(cloneid, revision, 123);
        String clones = cp.getClonesInClass(classid, revision, 123);
        int l = clones.trim().split("[ ]+").length;        
        
        //find other clones of the same class in the next revision.
        int classid2 = cp.getCloneClass(cloneid, revision+1, 123);
        
        if (classid2 == -1) 
        {
            return 0;
        }
        
        String clones2 = cp.getClonesInClass(classid2, revision+1, 123);
        clones2 = " " + clones2 + " ";
        
        for (int i =0;i<l;i++)
        {
            String clone = clones.trim().split("[ ]+")[i].trim();
            if (clone.equals (cloneid+"")) {continue;}
            if (clones2.contains (clone))
            {
                return 1;
            }
        }        
                               
        return 2;
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Project().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
