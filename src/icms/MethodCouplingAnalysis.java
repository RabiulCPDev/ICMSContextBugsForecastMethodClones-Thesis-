/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MethodCouplingAnalysis.java
 *
 * Created on Jun 12, 2013, 11:44:45 PM
 */

package icms;
import java.io.*;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mani
 */
public class MethodCouplingAnalysis extends javax.swing.JFrame {

    public int coupledMethod = -1;
    public int couplingCount = -1;
    public String otherMethods = "";
    public String coupledMethodName = "";
    public String coupledMethodFile = "";
    public String coupledMethodCommitList = "";

    CommonParameters commonParameters = new CommonParameters ();

    public String getMethodInfo (int mid)
    {
        try
        {
            String line = "";
            BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream( commonParameters.subject_system+"/changedmethods.txt")));
            while ((line = br.readLine())!= null)
            {
                if (line.trim().length() ==0){continue;}

                if (Integer.parseInt(line.trim().split("[:]+")[0].trim()) == mid)
                {
                    br.close();
                    return line;
                }
            }
        }
        catch (Exception e)
        {
            System.out.println ("error. method name = getMethodInfo." + e);
        }

        return "";
    }

    public String getRuleContainingMethods (int mid1, int mid2)
    {
        try
        {
            String line = "";
            BufferedReader br = new BufferedReader (new InputStreamReader (new FileInputStream( commonParameters.subject_system+"/resultrules.txt")));
            while ((line = br.readLine())!= null)
            {
                if (line.trim().length() ==0){continue;}

                if (line.trim().split("[:]+")[0].trim().equals(mid1+"---->"+mid2) || line.trim().split("[:]+")[0].trim().equals(mid2+"---->"+mid1))
                {
                    br.close();
                    return line;
                }
            }
        }
        catch (Exception e)
        {
            
        }
        
        return "";
    }



    /** Creates new form MethodCouplingAnalysis */
    public MethodCouplingAnalysis() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Analysis of Evolutionary Coupling");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("jLabel2");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Method ID", "Method Name", "Commit List"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("jLabel3");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("Click on any method in the above list to view how it co-changed with ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String cmethodName = "";
        String cfilePath = "";
        String commitList = "";
        String result = "";

        result = getMethodInfo(coupledMethod);
        cmethodName = result.split("[:]+")[1];
        coupledMethodName = cmethodName;
        cfilePath = result.split("[:]+")[2];
        coupledMethodFile = cfilePath;
        commitList = result.split("[:]+")[3];
        coupledMethodCommitList = commitList;

        String labelText = "";
        labelText += "<b>Method Name</b> = "+cmethodName + "(ID = "+coupledMethod+" )";
        //labelText += "<br/><b>File Path</b> = "+cfilePath;
        labelText += "<br/><b>Changed in Commits</b> = "+commitList+"";
        labelText += "<br/><br/>Method <b>"+cmethodName+"</b> co-changed with <b>"+couplingCount+"</b> other methods";        

        jLabel2.setText ("<html>"+labelText+"</html>");
        jLabel3.setText ("<html>The List of Other Methods Co-changed with <b>"+cmethodName+"</b></html>");
        jLabel4.setText ("<html>Click on any method in the above list to view how it co-changed with <b>"+cmethodName+"</b></html>");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for (int i =0;i< couplingCount;i++)
        {
            int mid = Integer.parseInt(otherMethods.trim().split("[ ]+")[i]);
            result = getMethodInfo(mid);
            String [] row = new String[6];
            row[0] = mid+"";
            row[1] = result.split("[:]+")[1];
            row[2] = result.split("[:]+")[3];
            //row[3] = result.split("[:]+")[2];
            model.addRow(row);
        }
    }//GEN-LAST:event_formWindowOpened

    
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        int selectedRow = -1;
        String result = "";

        selectedRow = jTable1.getSelectedRow();
        if (selectedRow > -1)
        {
            ChangeAnalysis changeAnalysis = new ChangeAnalysis ();
            changeAnalysis.m1 = coupledMethod;
            changeAnalysis.m2 = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
            changeAnalysis.setVisible(true);
            changeAnalysis.setDefaultCloseOperation(HIDE_ON_CLOSE);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MethodCouplingAnalysis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
